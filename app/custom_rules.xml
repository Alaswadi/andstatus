<?xml version="1.0" encoding="UTF-8"?>
<project name="AndStatus Dump" default="dump_all">
    <!-- This is included into the Ant build file build.xml    -->
	
	<target name="dump_all" description="Creates a local dump (zipped archive) of all AndStatus application-related files, including those not checked into a repository.">
		<!-- get the versionName from the manifest -->
		<xpath output="project.app.versionName" input="${manifest.abs.file}" expression="/manifest/@android:versionName"/>

		<!-- return: version name formatted for proper file name sorting
		Second and third numbers are padded to 2 and 3 symbols respectively 
		-->
		<scriptdef name="format_version_name" language="javascript">
		    <attribute name="out" />
		    <attribute name="in" />
		    <![CDATA[
		    var ver_in = attributes.get("in").toString();
			var ver_splitted = ver_in.split(".");
			project.log("ver_in = " + ver_in + "; ver_splitted.length=" + ver_splitted.length);
			var ver_out = "";
			if ( ver_splitted.length > 0 ) {
			  	ver_out += ver_splitted[0]; 
				if ( ver_splitted.length > 1 ) {
					// This is e.g. for "14.1-snapshot"
					var ver_minor_splitted = ver_splitted[1].split("-");
				  	ver_out += "." + pad(ver_minor_splitted[0], 2);
				  	if ( ver_minor_splitted.length > 1 ) {
				  		ver_out += "-" + ver_minor_splitted[1];
				  	}
				}
				if ( ver_splitted.length > 2 ) {
				  ver_out += "." + pad(ver_splitted[2], 3); 
				}
			}
			project.log("ver_out = " + ver_out);
		    project.setProperty( attributes.get( "out" ), ver_out );

			function pad(n, len) {
			    var s = n.toString();
				/* For some reason comparison as in the next script doesn't work here... */
	        	s = ('0000000000' + s).slice(-len);
			    return s;
			}
		    ]]>
		</scriptdef>
		<format_version_name in="${project.app.versionName}" out="ver" />
		
		<!-- Directory from which other relative paths are set: -->
		<property name="dumpBaseDir" location="../.." />
		<property name="destDumpDir" location="${dumpBaseDir}/Archives" />

		<echo message="$${basedir} is '${basedir}'" />
		<echo message="Dump base dir is '${dumpBaseDir}'" />
		<echo message="Creating AndStatus application dump v.${project.app.versionName} in '${destDumpDir}'" />
		
		<condition property="destDumpDirExists">
			<available file="${destDumpDir}" />
		</condition>
		<fail unless="destDumpDirExists" message="Directory '${destDumpDir}' doesn't exist" />

		<!-- Now we have to find the first unused minor version number of the zipped file.
		The code is derived from the example: 
		http://stackoverflow.com/questions/7351384/ant-load-file-names-and-extract-data-from-the-file-names?rq=1
		and search pattern is tested here: http://www.regextester.com/ 
		-->
		<!-- return: number padded to 3 symbols -->
		<scriptdef name="numeric_max_plus_one" language="javascript">
		    <attribute name="property" />
		    <attribute name="resources_id" />
		    <![CDATA[
		    var iter = project.getReference(
		       attributes.get( "resources_id" )
		   ).iterator( );

		    var max_n = -1;
		    while ( iter.hasNext() )
		    {
		        var n = parseFloat( iter.next() );
		        if ( n > max_n ) max_n = n;
		    }
		    project.setProperty( attributes.get( "property" ), pad(max_n + 1, 3) );
			
			function pad(n, len) {
			    s = n.toString();
			    if (s.length < len) {
			        s = ('0000000000' + s).slice(-len);
			    }
			    return s;
			}
		    ]]>
		</scriptdef>
		
		<property name="destPattern" value="AndStatus-${ver}-(.*)-(.*).zip" />
		<echo message="Existing dumps search pattern: '${destPattern}'" />		
		<mappedresources id="versions">
		    <fileset dir="${destDumpDir}" includes="*.zip" />
		    <regexpmapper from="${destPattern}" to="\1" />
		</mappedresources>
		
		<numeric_max_plus_one property="next.version" resources_id="versions" />
		<echo message="Unused dump version: ${next.version}." />		

		<input message="Enter the optional name suffix or press Enter for default suffix"
			addproperty="suffix" defaultvalue="dump" />	
		
		<property name="destDumpFile" value="${destDumpDir}/AndStatus-${ver}-${next.version}-${suffix}.zip"/>
		<condition property="destDumpFileExists">
			<available file="${destDumpFile}" />
		</condition>
		<fail if="destDumpFileExists" message="File '${destDumpFile}' already exists" />
		
		<zip destfile="${destDumpFile}">
			<fileset dir="${dumpBaseDir}" defaultexcludes="no" >
				<include name="Repository/**" />
				<include name="images/**" />
				<include name="scripts/**" />
				<include name="andstatus.org/**" />
				<include name="WikiRepository/**" />
				<exclude name="**/bin/**" />
				<exclude name="**/gen/**" />
				<exclude name="**/Old/**" />
			</fileset>
		</zip>
	</target>
</project>