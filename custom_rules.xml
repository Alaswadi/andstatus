<?xml version="1.0" encoding="UTF-8"?>
<project name="AndStatus Dump" default="dump_all" basedir="./..">
    <!-- The Ant build file is used to create local zipped dump of all AndStatus application-related files,
    including the files which are not checked into a repository  -->
	
	<target name="dump_all" description="Creates dump of all AndStatus application-related files">
		<property name="ver"   value="1-13-"/>
		<property name="destDumpDir" value="../Archives"/>

		<echo message="Base dir is '${basedir}'" />
		<echo message="Creating AndStatus application dump v.${ver}..." />
		
		<condition property="destDumpDirExists">
			<available file="${destDumpDir}" />
		</condition>
		<fail unless="destDumpDirExists" message="Directory '${destDumpDir}' doesn't exist" />

		<!-- Now we have to find the first unused minor version number of the zipped file.
		The code is derived from the example: 
		http://stackoverflow.com/questions/7351384/ant-load-file-names-and-extract-data-from-the-file-names?rq=1
		and search pattern is tested here: http://www.regextester.com/ 
		-->
		<!-- return: number padded to 3 symbols -->
		<scriptdef name="numeric_max_plus_one" language="javascript">
		    <attribute name="property" />
		    <attribute name="resources_id" />
		    <![CDATA[
		    var iter = project.getReference(
		       attributes.get( "resources_id" )
		   ).iterator( );

		    var max_n = -1;
		    while ( iter.hasNext() )
		    {
		        var n = parseFloat( iter.next() );
		        if ( n > max_n ) max_n = n;
		    }
		    project.setProperty( attributes.get( "property" ), pad(max_n + 1, 3) );
			
			function pad(n, len) {
			    s = n.toString();
			    if (s.length < len) {
			        s = ('0000000000' + s).slice(-len);
			    }
			    return s;
			}
		    ]]>
		</scriptdef>
		
		<property name="destPattern" value="AndStatus-${ver}(.*)-dump(.*).zip" />
		<echo message="Existing dumps search pattern: '${destPattern}'" />		
		<mappedresources id="versions">
		    <fileset dir="${destDumpDir}" includes="*.zip" />
		    <regexpmapper from="${destPattern}" to="\1" />
		</mappedresources>
		
		<numeric_max_plus_one property="next.version" resources_id="versions" />
		<echo message="Unused dump version: ${next.version}." />		

		<input message="Enter optional name suffix"
			addproperty="suffix" />		
		
		<property name="destDumpFile" value="${destDumpDir}/AndStatus-${ver}${next.version}-dump${suffix}.zip"/>
		<condition property="destDumpFileExists">
			<available file="${destDumpFile}" />
		</condition>
		<fail if="destDumpFileExists" message="File '${destDumpFile}' already exists" />
		
		<property name="srcDumpDir" value="${basedir}/.."/>
		<zip destfile="${destDumpFile}">
			<fileset dir="${srcDumpDir}" defaultexcludes="no" >
				<include name="Repository/**" />
				<include name="images/**" />
				<include name="scripts/**" />
				<exclude name="**/Old/**" />
			</fileset>
		</zip>
	</target>
</project>